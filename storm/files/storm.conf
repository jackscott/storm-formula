#!jinja|yaml
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This file is generated by saltstack
# DO NOT EDIT!!  Any changes will be overwritten
{%- from "storm/defaults.yaml" import rawmap with context %}
{%- set config = salt['pillar.get']('storm:config', rawmap.config, merge=True) %}

{%- macro fmt_value(value) -%}
{%- if value is not string and value is iterable -%}
{{ value|join(",") }}
{%- elif value == True or value == False -%}
{{ value|string|lower }}
{%- else -%}
{{ value }}
{%- endif -%}
{%- endmacro %}

# These keys can be found in `storm:config`
{%- for section, data in config.items() %}
{%- macro fmt(key, value) -%}
{% if value is not none %}
{{ '%s.%s'|format(section, key) }}={{ fmt_value(value) }}
{%- else -%}
# None value {{ key }} => {{ value }}
{% endif %}
{%- endmacro -%}

{%- if data is mapping %}
{% for x,y in data.items() %}
{{ fmt(x , y) }}
{%- endfor %}
{%- elif data is not none %}
{{ section }}: {{ fmt_value(data) }}
{%- else %}
# unknown: {{ section }} => {{ data }}
{%- endif %}
{%- endfor %}

storm.zookeeper.servers: [{{ zk_hosts|join(',') }}]

{%- set port = salt['pillar.get']("supervisor_start_port", 6700) %}
supervisor.slots.ports:
  {%- for i in range(0, salt['pillar.get']('supervisor_slots', 4)) %}
  - {{ port + i }}
  {%- endfor %}
